{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","getFullYear","day","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilterYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpenses","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d62e7c76.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.getFullYear();\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\n// import React, { useState } from \"react\";\n\nfunction ExpenseItem(props) {\n  // const [title, setTitle] = useState(props.title);\n\n  // const clickHandle = () => {\n  //   // console.log(\"Clicked!!\");\n  //   setTitle(\"Updated!\");\n  //   console.log(title);\n  // };\n\n  return (\n    <Card className=\"expense-item\">\n      {/* <div>{props.date.toISOString()}</div> */}\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        {/* <h2>{title}</h2> */}\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      {/* <button onClick={clickHandle}>Change Title</button> */}\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0)\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","// import React, { useState } from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  // const [year, setYear] = useState(\"\");\n\n  const dropDownChangeHandler = (event) => {\n    // setYear(event.target.value);\n    props.onChangeFilter(event.target.value);\n    // console.log(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        {/* style expects js object hence {{}} */}\n        <div className=\"chart-bar__fill\" style={{ height: barFillHight }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMax = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sept\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // Starting at 0 => Jan =>0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilterYear] = useState(\"2022\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilterYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  // Way-3\n\n  // let expensesContent = <p>No expenses found!</p>;\n\n  // if (filteredExpenses.length > 0) {\n  //   expensesContent = filteredExpenses.map((expense) => (\n  //     <ExpenseItem\n  //       key={expense.id}\n  //       title={expense.title}\n  //       amount={expense.amount}\n  //       date={expense.date}\n  //     />\n  //   ));\n  // }\n\n  return (\n    <div>\n      {/* <li> */}\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n\n        <ExpensesChart expenses={filteredExpenses} />\n\n        {/* Way-4 : adding new component ExpensesList.js */}\n        <ExpensesList items={filteredExpenses} />\n\n        {/* Way-3 */}\n        {/* {expensesContent} */}\n\n        {/* Way-2 */}\n\n        {/* {filteredExpenses.length === 0 && <p>No expenses found!</p>}\n        {filteredExpenses.length > 0 &&\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))} */}\n\n        {/* Way-1 */}\n\n        {/* {filteredExpenses.length === 0 ? (\n          <p>No expenses found!</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))\n        )} */}\n      </Card>\n      {/* </li> */}\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  // Way-1\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // Way-2 (for way 1 and 2 below)\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n\n    // Way-1\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n\n    // Way-2 : Always use prevState if the your are relying on prev. data, because react schedules update, so prev state ensures you get latest data\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          {/* Two way binding - reading value and reset */}\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"Date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={props.onCancel} type=\"button\">\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n        {/* We can add Click event to this button, but this would not be a best way of listing here. Becuase inded a default behaviour in built into a browser and built-into a forms on webpages. If a button especially with type sumbit is pressed inside of a form, the overall form element emit an event, which we can listen. therfore we will add event(onSubmit) to the form instead of button. But, this default behaviou reloads the page everytime the event happens/button clicked. To prevent that will have to use event.preventDefault() */}\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpenses.css\";\nimport \"./ExpenseForm\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpenses = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expenses</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpenses;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"A Book\",\n    amount: 29.99,\n    date: new Date(2022, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2022, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n  {\n    id: \"e5\",\n    title: \"Sofa\",\n    amount: 450,\n    date: new Date(2020, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  // console.log(expenses);\n\n  return (\n    <div>\n      <NewExpenses onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}